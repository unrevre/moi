#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc lock

hc emit_hook reload

# remove all existing bindings
hc keyunbind --all

# modifiers
Mod=Mod1    # use alt as main modifier
Win=Mod4    # use super key as alternate modifier

# bindings
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-m detect_monitors

hc keybind $Mod-Return                                                      \
    chain . and , compare tags.focus.tiling.focused_frame.algorithm = max   \
                , rule once index=@                                         \
          . spawn kitty -1
hc keybind $Mod-grave   spawn rofi -show run
hc keybind $Mod-Shift-c close
hc keybind $Mod-Shift-w chain . close . emit_hook on_close

hc keybind $Win-l       spawn xsecurelock

# basic movement
# focusing clients
hc keybind $Mod-h   focus left
hc keybind $Mod-j   focus down
hc keybind $Mod-k   focus up
hc keybind $Mod-l   focus right

# moving clients
hc keybind $Mod-Control-h   shift left
hc keybind $Mod-Control-j   shift down
hc keybind $Mod-Control-k   shift up
hc keybind $Mod-Control-l   shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u   split bottom 0.5
hc keybind $Mod-o   split right 0.5

# let the current frame explode into subframes
hc keybind $Mod-e   split explode

# layouting
hc keybind $Mod-r   remove

hc keybind $Mod-x   floating toggle
hc keybind $Mod-z   fullscreen toggle
hc keybind $Mod-p   pseudotile toggle

hc keybind $Mod-m   set_layout max

# this cycles through the available layouts within a frame, but skips those
# where the layout change would not affect the actual window positions.
# e.g. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-semicolon                                   \
    or , and . compare tags.focus.curframe_wcount = 2       \
             . cycle_layout +1 vertical horizontal max grid \
       , cycle_layout +1

# focus
hc keybind $Mod-slash           cycle_monitor
hc keybind $Mod-period          cycle +1
hc keybind $Mod-comma           cycle -1
hc keybind $Mod-Shift-period    cycle_frame +1
hc keybind $Mod-Shift-comma     cycle_frame -1

hc keybind $Mod-Tab jumpto urgent

# cycle through tags
hc keybind $Mod-equal   use_index +1 --skip-visible
hc keybind $Mod-minus   use_index -1 --skip-visible

# resizing frames
hc keybind $Mod-Left    resize left +0.04
hc keybind $Mod-Down    resize down +0.04
hc keybind $Mod-Up      resize up +0.04
hc keybind $Mod-Right   resize right +0.04

# volume
hc keybind XF86AudioMute        spawn amixer set Master toggle
hc keybind XF86AudioRaiseVolume spawn amixer set Master 2+ unmute
hc keybind XF86AudioLowerVolume spawn amixer set Master 2- unmute

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} )

hc rename default "${tag_names[0]}" || true

for i in "${!tag_names[@]}"; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ]; then
        hc keybind "$Mod-$key"          use_index "$i"
        hc keybind "$Mod-Control-$key"  move_index "$i"
    fi
done

# mouse
hc mouseunbind --all

# rules
hc unrule -F

hc rule focus=on
hc rule index=e
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# settings
hc set frame_gap 8
hc set frame_padding 0
hc set window_gap 4

hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_border_width 0

hc set focus_crosses_monitor_boundaries on
hc set raise_on_focus on

hc set tree_style '╾│ ├└╼─┐'

# theme
hc attr theme.color '#515151'
hc attr theme.outer_color '#515151'
hc attr theme.inner_color '#000000'
hc attr theme.active.color '#ffcc66'
hc attr theme.normal.color '#515151'
hc attr theme.urgent.color '#f2777a'
hc attr theme.background_color '#515151'
hc attr theme.inner_width 4
hc attr theme.outer_width 0
hc attr theme.border_width 8

# unlock, just to be sure
hc unlock

# multi-monitor setup
hc detect_monitors

# setup panel
bar=${HOME}/.config/herbstluftwm/bar

for monitor in $(hc list_monitors | cut -d: -f1); do
    "$bar" "$monitor" &
done

# functions
focus_other() {
    hc lock

    tag=$(hc list_monitors | grep '\[FOCUS\]' | cut -d'"' -f2)
    for i in $(seq 1 "$(hc attr tags.by-name.$tag.frame_count)"); do
        (( $(hc attr tags.by-name.$tag.curframe_wcount) )) && break
        hc cycle_frame 1
    done

    hc unlock
}

# hooks
hc --idle 'on_close' | while read -r hook; do
    case $hook in
        on_close)
            focus_other
            ;;
    esac
done
